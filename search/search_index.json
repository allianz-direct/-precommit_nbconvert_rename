{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"nb_prep nb_prep prepares jupyter notebooks for storing stripped versions in git and sharing results with stakeholders. You can use the nb_prep CLI to: Convert jupyter notebooks to HTML (using nbconvert ) and: add a date prefix to the filename. add a git hash suffix to the filename. move the HTML file to a configured output directory Strip all cell outputs (using nbstripout ) You can also configure nb_prep once as a pre-commit hook and have notebook output automatically prepared every time you git commit . Installation pip install nb_prep Documentation See allianz-direct.github.io/nb_prep .","title":"Home"},{"location":"#nb_prep","text":"nb_prep prepares jupyter notebooks for storing stripped versions in git and sharing results with stakeholders. You can use the nb_prep CLI to: Convert jupyter notebooks to HTML (using nbconvert ) and: add a date prefix to the filename. add a git hash suffix to the filename. move the HTML file to a configured output directory Strip all cell outputs (using nbstripout ) You can also configure nb_prep once as a pre-commit hook and have notebook output automatically prepared every time you git commit .","title":"nb_prep"},{"location":"#installation","text":"pip install nb_prep","title":"Installation"},{"location":"#documentation","text":"See allianz-direct.github.io/nb_prep .","title":"Documentation"},{"location":"options/","text":"Options Options are also documented in the CLI tool, see nb_prep --help Using templates If you want to specify a different template for nbconvert , you can add an argument to the nb_prep process hook: CLI Pre-commit hook nb_prep process --nbconvert-template 'reveal' . # .pre-commit-config.yaml repos : - repo : https://github.com/allianz-direct/nb_prep rev : main hooks : - id : nb_prep_precommit args : [ \"--nbconvert-template\" , \"reveal\" ] - id : nb_prep_postcommit If you use a custom nbconvert template in combination with a pre-commit hook, you'll need to specify it as an additional_dependencies . For example when using nbconvert-acme : # .pre-commit-config.yaml repos : - repo : https://github.com/allianz-direct/nb_prep rev : main hooks : - id : nb_prep_precommit args : [ \"--nbconvert-template\" , \"reveal\" ] additional_dependencies : [ \"git+https://github.com/SylvainCorlay/nbconvert-acme\" ] - id : nb_prep_postcommit Removing cell blocks You can also choose to remove input code blocks from the converted HTML (equivalent to jupyter nbconvert --no-input ). CLI Pre-commit hook nb_prep process --nbconvert-no-input . # .pre-commit-config.yaml repos : - repo : https://github.com/allianz-direct/nb_prep rev : main hooks : - id : nb_prep_precommit args : [ \"--nbconvert-no-input\" ] - id : nb_prep_postcommit Specifying an output directory You might want to output all HTML notebooks in a specific folder. The default is using the same folder as the notebook. You can specify different folder relative to the project root or by absolute path using --output-dir : CLI Pre-commit hook nb_prep process --output-dir \"~/workspace/notebook_output\" . nb_prep rename --output-dir \"~/workspace/notebook_output\" . # .pre-commit-config.yaml repos : - repo : https://github.com/allianz-direct/nb_prep rev : main hooks : - id : nb_prep_precommit args : [ \"--output-dir\" , \"~/workspace/notebook_output\" ] - id : nb_prep_postcommit args : [ \"--output-dir\" , \"~/workspace/notebook_output\" ] Excluding directories and files You can ignore certain notebooks or even entire directories with globs , using a relative (to project root) or absolute path with --exclude . For example: CLI Pre-commit hook nb_prep process --exclude \"templates/*\" , \"a_notebook.ipynb\" . # .pre-commit-config.yaml repos : - repo : https://github.com/allianz-direct/nb_prep rev : main hooks : - id : nb_prep_precommit args : [ \"--exclude\" , \"templates/*\" , \"a_notebook.ipynb\" ] - id : nb_prep_postcommit Removing commit hash Inserting a commit hash into the HTML filename can be useful to track which commit created the content. You can disable it using the --no-git-hash-suffix parameter. Note we also do not need the nb_prep rename step anymore. CLI Pre-commit hook nb_prep process --no-git-hash-suffix . # .pre-commit-config.yaml repos : - repo : https://github.com/allianz-direct/nb_prep rev : main hooks : - id : nb_prep_precommit args : [ \"--no-git-hash-suffix\" ] Warning nb_prep process will not overwrite any output files that already exist. When you use the default setting, only the first commit of the day will generate output. To fix that, use a more detailed date prefix like %Y%m%d%H%M%S . Removing date prefix By default, output HTML will have a YYYYMMDD_ prefix. You can remove it by setting an empty prefix ( \"\" ) or change the prefix by speficying a different format (see strftime cheatsheet ). CLI Pre-commit hook nb_prep process --date-prefix \"\" . # .pre-commit-config.yaml repos : - repo : https://github.com/allianz-direct/nb_prep rev : main hooks : - id : nb_prep_precommit args : [ \"--date-prefix\" , \"\" ]","title":"Options"},{"location":"options/#options","text":"Options are also documented in the CLI tool, see nb_prep --help","title":"Options"},{"location":"options/#using-templates","text":"If you want to specify a different template for nbconvert , you can add an argument to the nb_prep process hook: CLI Pre-commit hook nb_prep process --nbconvert-template 'reveal' . # .pre-commit-config.yaml repos : - repo : https://github.com/allianz-direct/nb_prep rev : main hooks : - id : nb_prep_precommit args : [ \"--nbconvert-template\" , \"reveal\" ] - id : nb_prep_postcommit If you use a custom nbconvert template in combination with a pre-commit hook, you'll need to specify it as an additional_dependencies . For example when using nbconvert-acme : # .pre-commit-config.yaml repos : - repo : https://github.com/allianz-direct/nb_prep rev : main hooks : - id : nb_prep_precommit args : [ \"--nbconvert-template\" , \"reveal\" ] additional_dependencies : [ \"git+https://github.com/SylvainCorlay/nbconvert-acme\" ] - id : nb_prep_postcommit","title":"Using templates"},{"location":"options/#removing-cell-blocks","text":"You can also choose to remove input code blocks from the converted HTML (equivalent to jupyter nbconvert --no-input ). CLI Pre-commit hook nb_prep process --nbconvert-no-input . # .pre-commit-config.yaml repos : - repo : https://github.com/allianz-direct/nb_prep rev : main hooks : - id : nb_prep_precommit args : [ \"--nbconvert-no-input\" ] - id : nb_prep_postcommit","title":"Removing cell blocks"},{"location":"options/#specifying-an-output-directory","text":"You might want to output all HTML notebooks in a specific folder. The default is using the same folder as the notebook. You can specify different folder relative to the project root or by absolute path using --output-dir : CLI Pre-commit hook nb_prep process --output-dir \"~/workspace/notebook_output\" . nb_prep rename --output-dir \"~/workspace/notebook_output\" . # .pre-commit-config.yaml repos : - repo : https://github.com/allianz-direct/nb_prep rev : main hooks : - id : nb_prep_precommit args : [ \"--output-dir\" , \"~/workspace/notebook_output\" ] - id : nb_prep_postcommit args : [ \"--output-dir\" , \"~/workspace/notebook_output\" ]","title":"Specifying an output directory"},{"location":"options/#excluding-directories-and-files","text":"You can ignore certain notebooks or even entire directories with globs , using a relative (to project root) or absolute path with --exclude . For example: CLI Pre-commit hook nb_prep process --exclude \"templates/*\" , \"a_notebook.ipynb\" . # .pre-commit-config.yaml repos : - repo : https://github.com/allianz-direct/nb_prep rev : main hooks : - id : nb_prep_precommit args : [ \"--exclude\" , \"templates/*\" , \"a_notebook.ipynb\" ] - id : nb_prep_postcommit","title":"Excluding directories and files"},{"location":"options/#removing-commit-hash","text":"Inserting a commit hash into the HTML filename can be useful to track which commit created the content. You can disable it using the --no-git-hash-suffix parameter. Note we also do not need the nb_prep rename step anymore. CLI Pre-commit hook nb_prep process --no-git-hash-suffix . # .pre-commit-config.yaml repos : - repo : https://github.com/allianz-direct/nb_prep rev : main hooks : - id : nb_prep_precommit args : [ \"--no-git-hash-suffix\" ] Warning nb_prep process will not overwrite any output files that already exist. When you use the default setting, only the first commit of the day will generate output. To fix that, use a more detailed date prefix like %Y%m%d%H%M%S .","title":"Removing commit hash"},{"location":"options/#removing-date-prefix","text":"By default, output HTML will have a YYYYMMDD_ prefix. You can remove it by setting an empty prefix ( \"\" ) or change the prefix by speficying a different format (see strftime cheatsheet ). CLI Pre-commit hook nb_prep process --date-prefix \"\" . # .pre-commit-config.yaml repos : - repo : https://github.com/allianz-direct/nb_prep rev : main hooks : - id : nb_prep_precommit args : [ \"--date-prefix\" , \"\" ]","title":"Removing date prefix"},{"location":"usage/","text":"Usage Use case You use jupyter notebooks and: nbconvert to convert .ipynb files to .html files nbstripout to avoid committing (potentially sensitive) data to git and get proper git diff s on notebooks (only showing changes in code). Forget to run nbconvert or use them in the wrong order ( nbstripout before nbconvert ) and you will have to re-run your notebooks before you can output HTML, which can be annoying when they are long-running. Especially when you use nbstripout as a pre-commit hook, this can happen quite often. nb_prep can help to automatically process notebooks and (optionally) store versioned output in an output directory. Using as a CLI The CLI command nb_prep process takes a list of directories and/or files to find and process notebooks. For each notebook: nbconvert is used to create an <filename>.html export A date prefix is added YYYYMMDD_<filename>.html (can be turned off) A placeholder for git hash is added YYYYMMDD_<filename>_NBCONVERT_RENAME_COMMITHASH_PLACEHOLDER.html The .html file is moved to an output-dir (if specified) The nbstripout is used to strip output from the .ipynb file Now you can git add and git commit the changed notebook files. You can then use nb_prep rename to insert the commit hashes in the notebook filenames. For example: 20220101_my_notebook_NBCONVERT_RENAME_COMMITHASH_PLACEHOLDER.html -> 20220101_my_notebook_eac9e43.html Tip Add *.html to a .gitignore in the root of your repository to avoid committing HTML files to git. Setting up as a pre-commit hook You can setup this entire workflow once as pre-commit hook, and basically get an up-to-date analysis output directory for free at the specified --output-dir . Schematically: You need to update the .pre-commit-config.yaml in your repository to include nb_prep : repos : - repo : https://github.com/allianz-direct/nb_prep rev : main hooks : - id : nb_prep_precommit - id : nb_prep_postcommit You need to install the pre-commit and the post-commit hooks separately: pre-commit install pre-commit install --hook-type post-commit When you commit a notebook, you might see something like: git add notebook.ipynb git commit -m \"Add notebook\" # nb_prep (pre-commit; process notebooks)...................................Failed # - hook id: nb_prep_precommit # - files were modified by this hook # nb_prep (post-commit; replace hash placeholder in .html filenames)........Passed nb_prep has used nbstripout to overwrite notebook.ipynb . It has also created a file in the output directory named something like 20211026_notebook_NBCONVERT_RENAME_COMMITHASH_PLACEHOLDER.html . Re-add and re-commit the notebook again: git add notebook.ipynb git commit -m \"Add notebook\" # nb_prep (pre-commit; process notebooks)...................................Passed # nb_prep (post-commit; replace hash placeholder in .html filenames)........Passed Because the output file already exists, nb_prep will not overwrite it, because if we would convert again and output it would be a stripped version without any cell outputs. Now, you've committed a clean, stripped version of notebook.ipynb . and you have a local snapshot of your notebook named something like 20211026_notebook_eac9e43.html .","title":"Usage"},{"location":"usage/#usage","text":"","title":"Usage"},{"location":"usage/#use-case","text":"You use jupyter notebooks and: nbconvert to convert .ipynb files to .html files nbstripout to avoid committing (potentially sensitive) data to git and get proper git diff s on notebooks (only showing changes in code). Forget to run nbconvert or use them in the wrong order ( nbstripout before nbconvert ) and you will have to re-run your notebooks before you can output HTML, which can be annoying when they are long-running. Especially when you use nbstripout as a pre-commit hook, this can happen quite often. nb_prep can help to automatically process notebooks and (optionally) store versioned output in an output directory.","title":"Use case"},{"location":"usage/#using-as-a-cli","text":"The CLI command nb_prep process takes a list of directories and/or files to find and process notebooks. For each notebook: nbconvert is used to create an <filename>.html export A date prefix is added YYYYMMDD_<filename>.html (can be turned off) A placeholder for git hash is added YYYYMMDD_<filename>_NBCONVERT_RENAME_COMMITHASH_PLACEHOLDER.html The .html file is moved to an output-dir (if specified) The nbstripout is used to strip output from the .ipynb file Now you can git add and git commit the changed notebook files. You can then use nb_prep rename to insert the commit hashes in the notebook filenames. For example: 20220101_my_notebook_NBCONVERT_RENAME_COMMITHASH_PLACEHOLDER.html -> 20220101_my_notebook_eac9e43.html Tip Add *.html to a .gitignore in the root of your repository to avoid committing HTML files to git.","title":"Using as a CLI"},{"location":"usage/#setting-up-as-a-pre-commit-hook","text":"You can setup this entire workflow once as pre-commit hook, and basically get an up-to-date analysis output directory for free at the specified --output-dir . Schematically: You need to update the .pre-commit-config.yaml in your repository to include nb_prep : repos : - repo : https://github.com/allianz-direct/nb_prep rev : main hooks : - id : nb_prep_precommit - id : nb_prep_postcommit You need to install the pre-commit and the post-commit hooks separately: pre-commit install pre-commit install --hook-type post-commit When you commit a notebook, you might see something like: git add notebook.ipynb git commit -m \"Add notebook\" # nb_prep (pre-commit; process notebooks)...................................Failed # - hook id: nb_prep_precommit # - files were modified by this hook # nb_prep (post-commit; replace hash placeholder in .html filenames)........Passed nb_prep has used nbstripout to overwrite notebook.ipynb . It has also created a file in the output directory named something like 20211026_notebook_NBCONVERT_RENAME_COMMITHASH_PLACEHOLDER.html . Re-add and re-commit the notebook again: git add notebook.ipynb git commit -m \"Add notebook\" # nb_prep (pre-commit; process notebooks)...................................Passed # nb_prep (post-commit; replace hash placeholder in .html filenames)........Passed Because the output file already exists, nb_prep will not overwrite it, because if we would convert again and output it would be a stripped version without any cell outputs. Now, you've committed a clean, stripped version of notebook.ipynb . and you have a local snapshot of your notebook named something like 20211026_notebook_eac9e43.html .","title":"Setting up as a pre-commit hook"}]}